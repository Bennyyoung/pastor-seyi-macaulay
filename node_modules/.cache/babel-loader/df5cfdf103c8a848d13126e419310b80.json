{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importDefault(require(\"react\"));\n\nconst prop_types_1 = __importDefault(require(\"prop-types\"));\n\nconst enhancers_1 = require(\"./enhancers\");\n\nconst enhance_props_1 = __importDefault(require(\"./enhance-props\"));\n\nconst Box = _a => {\n  var _a$is = _a.is,\n      is = _a$is === void 0 ? 'div' : _a$is,\n      innerRef = _a.innerRef,\n      children = _a.children,\n      props = __rest(_a, [\"is\", \"innerRef\", \"children\"]); // Convert the CSS props to class names (and inject the styles)\n\n\n  const _enhance_props_1$defa = enhance_props_1.default(props),\n        className = _enhance_props_1$defa.className,\n        parsedProps = _enhance_props_1$defa.enhancedProps;\n\n  parsedProps.className = className;\n\n  if (innerRef) {\n    parsedProps.ref = innerRef;\n  }\n\n  return react_1.default.createElement(is, parsedProps, children);\n};\n\nBox.displayName = 'Box';\nBox.propTypes = Object.assign({}, enhancers_1.propTypes, {\n  innerRef: prop_types_1.default.oneOfType([prop_types_1.default.func, prop_types_1.default.shape({\n    current: prop_types_1.default.element\n  })]),\n  is: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.func])\n});\nBox.defaultProps = {\n  innerRef: null,\n  is: 'div',\n  boxSizing: 'border-box'\n};\nexports.default = Box;","map":null,"metadata":{},"sourceType":"script"}
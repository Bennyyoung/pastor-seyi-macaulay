{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst hash_1 = __importDefault(require(\"@emotion/hash\"));\n\nconst get_safe_value_1 = __importDefault(require(\"./get-safe-value\"));\n/**\n * Generates the class name.\n */\n\n\nfunction getClassName(propertyInfo, value) {\n  const className = propertyInfo.className,\n        _propertyInfo$safeVal = propertyInfo.safeValue,\n        safeValue = _propertyInfo$safeVal === void 0 ? false : _propertyInfo$safeVal,\n        _propertyInfo$complex = propertyInfo.complexValue,\n        complexValue = _propertyInfo$complex === void 0 ? false : _propertyInfo$complex;\n  let valueKey; // Shortcut the global keywords\n\n  if (value === 'inherit' || value === 'initial' || value === 'unset') {\n    valueKey = value;\n    /* Always hash values that contain a calc() because the operators get\n    stripped which can result in class name collisions\n    */\n  } else if (complexValue || value.includes('calc(')) {\n    valueKey = hash_1.default(value);\n  } else if (safeValue) {\n    valueKey = value;\n  } else {\n    valueKey = get_safe_value_1.default(value);\n  }\n\n  return \"\\uD83D\\uDCE6\".concat(className, \"_\").concat(valueKey);\n}\n\nexports.default = getClassName;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prop_types_1 = __importDefault(require(\"prop-types\"));\n\nconst get_css_1 = __importDefault(require(\"../get-css\"));\n\nconst regex_1 = require(\"../utils/regex\");\n\nexports.propTypes = {\n  border: prop_types_1.default.string,\n  borderBottom: prop_types_1.default.string,\n  borderBottomColor: prop_types_1.default.string,\n  borderBottomStyle: prop_types_1.default.string,\n  borderBottomWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),\n  borderColor: prop_types_1.default.string,\n  borderLeft: prop_types_1.default.string,\n  borderLeftColor: prop_types_1.default.string,\n  borderLeftStyle: prop_types_1.default.string,\n  borderLeftWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),\n  borderRight: prop_types_1.default.string,\n  borderRightColor: prop_types_1.default.string,\n  borderRightStyle: prop_types_1.default.string,\n  borderRightWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),\n  borderStyle: prop_types_1.default.string,\n  borderTop: prop_types_1.default.string,\n  borderTopColor: prop_types_1.default.string,\n  borderTopStyle: prop_types_1.default.string,\n  borderTopWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),\n  borderWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number])\n};\nexports.propAliases = {\n  border: ['borderBottom', 'borderLeft', 'borderRight', 'borderTop'],\n  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],\n  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],\n  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth']\n};\nexports.propValidators = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  exports.propValidators.borderColor = value => {\n    if (regex_1.spacesOutsideParentheses.test(value)) {\n      return \"multiple values (\\u201C\".concat(value, \"\\u201D) aren\\u055At supported with \\u201CborderColor\\u201D. Use \\u201CborderBottomColor\\u201D, \\u201CborderLeftColor\\u201D \\u201CborderRightColor\\u201D and \\u201CborderTopColor\\u201D instead.\");\n    }\n\n    return;\n  };\n\n  exports.propValidators.borderStyle = value => {\n    if (regex_1.spacesOutsideParentheses.test(value)) {\n      return \"multiple values (\\u201C\".concat(value, \"\\u201D) aren\\u055At supported with \\u201CborderStyle\\u201D. Use \\u201CborderBottomStyle\\u201D, \\u201CborderLeftStyle\\u201D \\u201CborderRightStyle\\u201D and \\u201CborderTopStyle\\u201D instead.\");\n    }\n\n    return;\n  };\n\n  exports.propValidators.borderWidth = value => {\n    if (regex_1.spacesOutsideParentheses.test(value)) {\n      return \"multiple values (\\u201C\".concat(value, \"\\u201D) aren\\u055At supported with \\u201CborderWidth\\u201D. Use \\u201CborderBottomWidth\\u201D, \\u201CborderLeftWidth\\u201D \\u201CborderRightWidth\\u201D and \\u201CborderTopWidth\\u201D instead.\");\n    }\n\n    return;\n  };\n}\n\nconst borderLeft = {\n  className: 'b-lft',\n  cssName: 'border-left',\n  jsName: 'borderLeft'\n};\nconst borderLeftColor = {\n  className: 'b-lft-clr',\n  cssName: 'border-left-color',\n  jsName: 'borderLeftColor'\n};\nconst borderLeftStyle = {\n  className: 'b-lft-stl',\n  cssName: 'border-left-style',\n  jsName: 'borderLeftStyle',\n  safeValue: true\n};\nconst borderLeftWidth = {\n  className: 'b-lft-wdt',\n  cssName: 'border-left-width',\n  jsName: 'borderLeftWidth'\n};\nconst borderRight = {\n  className: 'b-rgt',\n  cssName: 'border-right',\n  jsName: 'borderRight'\n};\nconst borderRightColor = {\n  className: 'b-rgt-clr',\n  cssName: 'border-right-color',\n  jsName: 'borderRightColor'\n};\nconst borderRightStyle = {\n  className: 'b-rgt-stl',\n  cssName: 'border-right-style',\n  jsName: 'borderRightStyle',\n  safeValue: true\n};\nconst borderRightWidth = {\n  className: 'b-rgt-wdt',\n  cssName: 'border-right-width',\n  jsName: 'borderRightWidth'\n};\nconst borderTop = {\n  className: 'b-top',\n  cssName: 'border-top',\n  jsName: 'borderTop'\n};\nconst borderTopColor = {\n  className: 'b-top-clr',\n  cssName: 'border-top-color',\n  jsName: 'borderTopColor'\n};\nconst borderTopStyle = {\n  className: 'b-top-stl',\n  cssName: 'border-top-style',\n  jsName: 'borderTopStyle',\n  safeValue: true\n};\nconst borderTopWidth = {\n  className: 'b-top-wdt',\n  cssName: 'border-top-width',\n  jsName: 'borderTopWidth'\n};\nconst borderBottom = {\n  className: 'b-btm',\n  cssName: 'border-bottom',\n  jsName: 'borderBottom'\n};\nconst borderBottomColor = {\n  className: 'b-btm-clr',\n  cssName: 'border-bottom-color',\n  jsName: 'borderBottomColor'\n};\nconst borderBottomStyle = {\n  className: 'b-btm-stl',\n  cssName: 'border-bottom-style',\n  jsName: 'borderBottomStyle',\n  safeValue: true\n};\nconst borderBottomWidth = {\n  className: 'b-btm-wdt',\n  cssName: 'border-bottom-width',\n  jsName: 'borderBottomWidth'\n};\nexports.propEnhancers = {\n  borderBottom: value => get_css_1.default(borderBottom, value),\n  borderBottomColor: value => get_css_1.default(borderBottomColor, value),\n  borderBottomStyle: value => get_css_1.default(borderBottomStyle, value),\n  borderBottomWidth: value => get_css_1.default(borderBottomWidth, value),\n  borderLeft: value => get_css_1.default(borderLeft, value),\n  borderLeftColor: value => get_css_1.default(borderLeftColor, value),\n  borderLeftStyle: value => get_css_1.default(borderLeftStyle, value),\n  borderLeftWidth: value => get_css_1.default(borderLeftWidth, value),\n  borderRight: value => get_css_1.default(borderRight, value),\n  borderRightColor: value => get_css_1.default(borderRightColor, value),\n  borderRightStyle: value => get_css_1.default(borderRightStyle, value),\n  borderRightWidth: value => get_css_1.default(borderRightWidth, value),\n  borderTop: value => get_css_1.default(borderTop, value),\n  borderTopColor: value => get_css_1.default(borderTopColor, value),\n  borderTopStyle: value => get_css_1.default(borderTopStyle, value),\n  borderTopWidth: value => get_css_1.default(borderTopWidth, value)\n};","map":null,"metadata":{},"sourceType":"script"}
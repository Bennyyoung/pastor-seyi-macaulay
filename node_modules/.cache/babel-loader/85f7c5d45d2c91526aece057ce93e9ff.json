{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benjamin\\\\Desktop\\\\ALL ABOUT PROGRAMMING\\\\WEBSITE_WORKS\\\\READY_TO_BE_SOLD_WORKS\\\\Pst_Seyi\\\\client\\\\src\\\\components\\\\Payments.js\";\nimport React, { Component } from 'react'; // import the library\n\nimport RavePaymentModal from 'react-ravepayment';\n\nclass Payments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      key: \"FLWPUBK_TEST-7dfdf85b776041fc6e4acda06c4db405-X\",\n      // RavePay PUBLIC KEY\n      email: \"benjamineffiong124@yahoo.com\",\n      // customer email\n      amount: 1000 // equals NGN 1000. Minimum amount allowed NGN 1 while on production or live system, it's 10\n\n    };\n\n    this.callback = response => {\n      console.log(response);\n    };\n\n    this.close = () => {\n      console.log(\"Payment closed\");\n    };\n\n    this.getReference = () => {\n      let text = \"\";\n      let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.=\";\n\n      for (let i = 0; i < 10; i++) text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n      return text;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Alternative Payment Channel If you are unable to make payments via our site, you can send your deposits via bank/ATM transfer or online transfer platforms (Internet Banking, Thrivesend, Quickteller etc) to the account below: Account No: 0111973500 Account Name: RON INTL LTD Bank: GT Bank Ensure to send your proof of payment immediately to invest@investnaira.com for your investment account to be credited\", React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(RavePaymentModal, {\n      text: \"Make Payment\",\n      class: \"payButton\",\n      metadata: [{\n        metaname: 'Device',\n        metavalue: 'IPhone X'\n      }],\n      reference: this.getReference(),\n      email: this.state.email,\n      amount: this.state.amount,\n      ravePubKey: this.state.key,\n      callback: this.callback,\n      close: this.close,\n      isProduction: false,\n      tag: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Payments;","map":{"version":3,"sources":["C:/Users/benjamin/Desktop/ALL ABOUT PROGRAMMING/WEBSITE_WORKS/READY_TO_BE_SOLD_WORKS/Pst_Seyi/client/src/components/Payments.js"],"names":["React","Component","RavePaymentModal","Payments","state","key","email","amount","callback","response","console","log","close","getReference","text","possible","i","charAt","Math","floor","random","length","render","metaname","metavalue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACI;;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE/BG,KAF+B,GAEvB;AACNC,MAAAA,GAAG,EAAE,iDADC;AACkD;AACxDC,MAAAA,KAAK,EAAE,8BAFD;AAEiC;AACvCC,MAAAA,MAAM,EAAE,IAHF,CAGO;;AAHP,KAFuB;;AAAA,SAQ9BC,QAR8B,GAQlBC,QAAD,IAAc;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,KAX6B;;AAAA,SAa9BG,KAb8B,GAatB,MAAM;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,KAf6B;;AAAA,SAiB9BE,YAjB8B,GAiBf,MAAM;AACpB,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,QAAQ,GAAG,mEAAf;;AAEA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,EAAlB,EAAsBA,CAAC,EAAvB,EACCF,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACM,MAApC,CAAhB,CAAR;;AAEK,aAAOP,IAAP;AACN,KAzB6B;AAAA;;AA2BhCQ,EAAAA,MAAM,GAAI;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iaAOE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,gBAAD;AACC,MAAA,IAAI,EAAC,cADN;AAEC,MAAA,KAAK,EAAC,WAFP;AAGC,MAAA,QAAQ,EAAE,CAAC;AAACC,QAAAA,QAAQ,EAAC,QAAV;AAAoBC,QAAAA,SAAS,EAAG;AAAhC,OAAD,CAHX;AAIC,MAAA,SAAS,EAAE,KAAKX,YAAL,EAJZ;AAKC,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,KALnB;AAMC,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,MANpB;AAOC,MAAA,UAAU,EAAE,KAAKH,KAAL,CAAWC,GAPxB;AAQC,MAAA,QAAQ,EAAE,KAAKG,QARhB;AASC,MAAA,KAAK,EAAE,KAAKI,KATb;AAUO,MAAA,YAAY,EAAE,KAVrB;AAWO,MAAA,GAAG,EAAC,QAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAPF,CADF;AAyBD;;AArD8B;;AAwDjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react'\r\n    // import the library\r\n    import RavePaymentModal from 'react-ravepayment'\r\n \r\n    class Payments extends Component {\r\n \r\n    \t\tstate = {\r\n    \t\t  key: \"FLWPUBK_TEST-7dfdf85b776041fc6e4acda06c4db405-X\", // RavePay PUBLIC KEY\r\n    \t\t  email: \"benjamineffiong124@yahoo.com\", // customer email\r\n    \t\t  amount: 1000 // equals NGN 1000. Minimum amount allowed NGN 1 while on production or live system, it's 10\r\n    \t    }\r\n \r\n    \t  callback = (response) => {\r\n    \t\t  console.log(response);\r\n \r\n    \t  }\r\n \r\n    \t  close = () => {\r\n    \t\t  console.log(\"Payment closed\");\r\n    \t  }\r\n \r\n    \t  getReference = () => {\r\n    \t\t  let text = \"\";\r\n    \t\t  let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.=\";\r\n \r\n    \t\t  for( let i=0; i < 10; i++ )\r\n    \t\t\t  text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n \r\n              return text;\r\n    \t  }\r\n \r\n    \trender () {\r\n        return (\r\n          <div className='App'>\r\n              Alternative Payment Channel\r\nIf you are unable to make payments via our site, you can send your deposits via bank/ATM transfer or online transfer platforms (Internet Banking, Thrivesend, Quickteller etc) to the account below:\r\nAccount No: 0111973500\r\nAccount Name: RON INTL LTD\r\nBank: GT Bank\r\nEnsure to send your proof of payment immediately to invest@investnaira.com for your investment account to be credited\r\n            <p className='App-intro'>\r\n    \t        <RavePaymentModal\r\n    \t\t        text=\"Make Payment\"\r\n    \t\t        class=\"payButton\"\r\n    \t\t        metadata={[{metaname:'Device', metavalue : 'IPhone X'}]}\r\n    \t\t        reference={this.getReference()}\r\n    \t\t        email={this.state.email}\r\n    \t\t        amount={this.state.amount}\r\n    \t\t        ravePubKey={this.state.key}\r\n    \t\t        callback={this.callback}\r\n    \t\t        close={this.close}\r\n                    isProduction={false}\r\n                    tag=\"button\" \r\n    \t        />\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n \r\n    export default Payments"]},"metadata":{},"sourceType":"module"}